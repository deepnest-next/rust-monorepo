/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export enum PolyType {
  Subject = 0,
  Clip = 1
}
export enum ClipType {
  None = 0,
  Intersection = 1,
  Union = 2,
  Difference = 3,
  Xor = 4
}
export enum FillType {
  EvenOdd = 0,
  NonZero = 1,
  Positive = 2,
  Negative = 3
}
export interface PointFloat64 {
  x: number
  y: number
}
export interface Point {
  x: number
  y: number
}
export declare function sum(a: number, b: number): number
export declare function minkowskiSumI64(a: Array<Point>, b: Array<Point>, closed: boolean): Array<Array<Point>>
export declare function minkowskiSumF64(a: Array<PointFloat64>, b: Array<PointFloat64>, closed: boolean, precision: number): Array<Array<PointFloat64>>
export declare class Clipper {
  static new(): Clipper
  addPaths(path: Array<Array<Point>>, polyType: PolyType): void
  execute(clipType: ClipType, fillType: FillType): Array<Array<Point>>
  clear(): void
}
export declare class ClipperFloat64 {
  static new(precision: number): ClipperFloat64
  addPaths(path: Array<Array<PointFloat64>>, polyType: PolyType): void
  execute(clipType: ClipType, fillType: FillType): Array<Array<PointFloat64>>
  clear(): void
}
